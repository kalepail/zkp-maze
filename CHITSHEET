RISC0_DEV_MODE=1 cargo test --release
RISC0_DEV_MODE=1 RUST_LOG=info RISC0_INFO=1 cargo run --release

./target/release/host generate-maze 2918957128
./target/release/host verify-path ./2918957128_maze_proof.json ./2918957128_moves.json

===

RunPod Start Command
runpod/pytorch:2.4.0-py3.11-cuda12.4.1-devel-ubuntu22.04
bash -c 'apt-get update && apt-get install -y protobuf-compiler libclang-dev && curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && source $HOME/.cargo/env && curl -L https://risczero.com/install | bash && export PATH="/root/.risc0/bin:$PATH" && rzup install && export PATH=/usr/local/cuda/bin:$PATH && export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH && echo "export PATH=/root/.risc0/bin:\$PATH" >> ~/.bashrc && echo "export PATH=/usr/local/cuda/bin:\$PATH" >> ~/.bashrc && echo "export LD_LIBRARY_PATH=/usr/local/cuda/lib64:\$LD_LIBRARY_PATH" >> ~/.bashrc && cd /workspace && ([ -d "noir-maze-challenge" ] || git clone https://github.com/kalepail/noir-maze-challenge.git) && cd noir-maze-challenge && git checkout risczero-server && echo "" && echo "========================================" && echo "RISC Zero Setup Complete!" && echo "========================================" && nvidia-smi && if [ -f /start.sh ]; then /start.sh; else sleep infinity; fi'

===

docker build --platform=linux/amd64 -f api-server/Dockerfile.dev -t noir-maze-challenge-dev .
docker run --rm --platform=linux/amd64 -v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 noir-maze-challenge-dev

===

curl https://sh.rustup.rs -sSf | sh

. "$HOME/.cargo/env"

curl -L https://risczero.com/install | bash

source "/root/.bashrc"

rzup install

cd workspace

git clone https://github.com/kalepail/noir-maze-challenge

cd noir-maze-challenge

git checkout risczero-frontend

RUSTFLAGS="-C target-cpu=native" cargo build -F cuda -r --package api-server

# Control + b then d

# TODO Cloudflare tunnel for Vast.ai